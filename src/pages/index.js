import Head from "next/head";
import styles from "@/styles/Home.module.css";
import Navbar from "@/components/Navbar";
import TokenForm from "@/components/TokenForm";
import { useEffect, useState } from "react";
import { getAlgodClient } from "../clients";
import { readGlobalState } from "../algorand/index.js";
import algosdk from "algosdk";

const network = process.env.NEXT_PUBLIC_NETWORK || "SandNet";
const algodClient = getAlgodClient(network);
const holdingsid = Number(process.env.NEXT_PUBLIC_HOLDINGS_ID);
const assetID = process.env.NEXT_PUBLIC_ASSET_ID;

export default function Home() {
  const [availableTokens, setAvailableTokens] = useState(0);
  const [currentprice, setcurrentprice] = useState(0);
  const updateAvailableTokens = async () => {
    try {
      const accountInfo = await algodClient
        .accountInformation(algosdk.getApplicationAddress(holdingsid))
        .do();
      const tokens = accountInfo.assets.find((x) => x["asset-id"] == assetID);
      const amount = tokens["amount"];

      setAvailableTokens(amount);
    } catch (error) {
      alert("No available tokens under this contract");
    }
  };

  const updatecurrentprice = async () => {
    const appGS = await readGlobalState(holdingsid);
    const currentprice = Number(appGS.get("Current Price"));
    setcurrentprice(currentprice);
  };

  useEffect(() => {
    updateAvailableTokens();
    updatecurrentprice();
  }, []);

  return (
    <>
      <Head>
        <title>TESLA</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main className={styles.main}>
        <div>
          <h1 className="text-5xl mb-4">Buy TESLA Tokens</h1>
          <h4 className="mb-4">Network: {network}</h4>
          <h4 className="mb-4">
            Holdings contract: {process.env.NEXT_PUBLIC_HOLDINGS_ADDRESS}
          </h4>
          <h4 className="mb-4">Available Tokens: {availableTokens}</h4>
          <h4 className="mb-4">Token Price in microAlgos: {currentprice}</h4>
        </div>
        <TokenForm onPurchase={updateAvailableTokens} />
      </main>
    </>
  );
}
