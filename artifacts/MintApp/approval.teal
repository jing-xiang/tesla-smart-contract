#pragma version 8
intcblock 0 1 4
bytecblock 0x4173736574204944 0x 0x151f7c75 0x4275726e2041646472657373 0x486f6c64696e672041646472657373
txn NumAppArgs
intc_0 // 0
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x46e70246 // "update_contracts()string"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0xac7275b6 // "mint_tokens(uint64,uint64,string,string)uint64"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xa93a8f2a // "send_tokens(uint64)string"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0xb75c2eba // "burn_tokens(uint64)string"
==
bnz main_l6
err
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub burntokens_5
store 7
bytec_2 // 0x151f7c75
load 7
concat
log
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub sendtokens_4
store 6
bytec_2 // 0x151f7c75
load 6
concat
log
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 1
txna ApplicationArgs 2
btoi
store 2
txna ApplicationArgs 3
store 3
txna ApplicationArgs 4
store 4
load 1
load 2
load 3
load 4
callsub minttokens_3
store 5
bytec_2 // 0x151f7c75
load 5
itob
concat
log
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updatecontracts_2
store 0
bytec_2 // 0x151f7c75
load 0
concat
log
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
err
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec_0 // "Asset ID"
intc_0 // 0
app_global_put
bytec_3 // "Burn Address"
bytec_1 // ""
app_global_put
bytec 4 // "Holding Address"
bytec_1 // ""
app_global_put
bytec 4 // "Holding Address"
txn Sender
app_global_put
bytec_3 // "Burn Address"
txn Sender
app_global_put
retsub

// basic_checks
basicchecks_1:
proto 0 1
txn RekeyTo
global ZeroAddress
==
txn CloseRemainderTo
global ZeroAddress
==
&&
txn AssetCloseTo
global ZeroAddress
==
&&
retsub

// update_contracts
updatecontracts_2:
proto 0 1
bytec_1 // ""
txn Sender
global CreatorAddress
==
// unauthorized
assert
txn Sender
global CreatorAddress
==
assert
callsub basicchecks_1
assert
bytec 4 // "Holding Address"
txna Accounts 1
app_global_put
bytec_3 // "Burn Address"
txna Accounts 2
app_global_put
pushbytes 0x00235570646174656420686f6c64696e677320616e64206275726e206163636f756e747321 // 0x00235570646174656420686f6c64696e677320616e64206275726e206163636f756e747321
frame_bury 0
retsub

// mint_tokens
minttokens_3:
proto 4 1
intc_0 // 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
txn Sender
global CreatorAddress
==
assert
txn Sender
balance
pushint 1000 // 1000
>=
assert
bytec_0 // "Asset ID"
app_global_get
intc_0 // 0
==
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -2
extract 2 0
itxn_field ConfigAssetName
frame_dig -1
extract 2 0
itxn_field ConfigAssetUnitName
frame_dig -3
itxn_field ConfigAssetDecimals
frame_dig -4
itxn_field ConfigAssetTotal
itxn_submit
bytec_0 // "Asset ID"
itxn CreatedAssetID
app_global_put
itxn CreatedAssetID
frame_bury 0
retsub

// send_tokens
sendtokens_4:
proto 1 1
bytec_1 // ""
txn Sender
global CreatorAddress
==
// unauthorized
assert
callsub basicchecks_1
assert
txn Sender
global CreatorAddress
==
assert
txna Accounts 1
bytec 4 // "Holding Address"
app_global_get
==
assert
txna Assets 0
bytec_0 // "Asset ID"
app_global_get
==
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
txna Assets 0
itxn_field XferAsset
txna Accounts 1
itxn_field AssetReceiver
frame_dig -1
itxn_field AssetAmount
itxn_submit
pushbytes 0x0028546f6b656e73207472616e7366657272656420746f20686f6c64696e677320636f6e747261637421 // 0x0028546f6b656e73207472616e7366657272656420746f20686f6c64696e677320636f6e747261637421
frame_bury 0
retsub

// burn_tokens
burntokens_5:
proto 1 1
bytec_1 // ""
txn Sender
global CreatorAddress
==
// unauthorized
assert
callsub basicchecks_1
assert
txn Sender
global CreatorAddress
==
assert
txna Assets 0
bytec_0 // "Asset ID"
app_global_get
==
assert
txna Accounts 1
bytec_3 // "Burn Address"
app_global_get
==
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
txna Assets 0
itxn_field XferAsset
txna Accounts 1
itxn_field AssetReceiver
frame_dig -1
itxn_field AssetAmount
itxn_submit
pushbytes 0x000e546f6b656e73206275726e656421 // 0x000e546f6b656e73206275726e656421
frame_bury 0
retsub